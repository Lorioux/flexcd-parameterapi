/*
 * Parameter
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Parameter struct {

	Id string `json:"id"`

	Name string `json:"name"`

	Description string `json:"description"`

	Default string `json:"default"`

	CommandId string `json:"commandId"`

	WorkflowId string `json:"workflowId"`
}

// AssertParameterRequired checks if the required fields are not zero-ed
func AssertParameterRequired(obj Parameter) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"name": obj.Name,
		"description": obj.Description,
		"default": obj.Default,
		"commandId": obj.CommandId,
		"workflowId": obj.WorkflowId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseParameterRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Parameter (e.g. [][]Parameter), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseParameterRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aParameter, ok := obj.(Parameter)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertParameterRequired(aParameter)
	})
}
